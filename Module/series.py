import json,requests

def getSeries(baseurl,category):
	return requests.get(baseurl+str(category))

def getCategories(baseurl,category):
	return getSeries(baseurl,category)

def getChildSeries(r):
	""" Retrieves the available price time series from
	the JSON output as a list of dictionary objects """
    
	global fn
	fn=r.json()['category']['category_id']
	return r.json()['category']['childseries']

def getChildCategories(r):
	""" This is for grabbing a list of series from the 
	parent category """
	return r.json()['category']['childcategories']

def getList(g,ga):
	""" Extracts the weekly price data from the list
	obtained by getChildSeries()."""
	ga[:] = []

	for i in g:
		if i['series_id'].split('.')[-1] in ['D','W']:
			ga.append({i['name']:i['series_id']})
	return ga

def setJson(ga):
	""" Writes the data generated by getLists() to a file as JSON. 
	Sets the filename as the category.series """
	global fn
	with open('output/'+fn+'.series','w') as f:
		json.dump(ga,f)

#import readline
#readline.write_history_file('session_history')

"""
Use case:
	Get all possible series in the following category:
	EIA Data Sets > Petroleum > Prices > Weekly Retail Gasoline and Diesel Prices > by Product

	import series as s
	baseurl='http://api.eia.gov/category/?api_key=YOUR_API_KEY_HERE&category_id='

	# Make usre baseurl uses category or series where appropriate based on EIA API template

	category=241020
	r=s.getCategories(baseurl,category)
	g=s.getChildCategories(r)
	for i in g:
		s.setJson(s.getList(s.getChildSeries(s.getSeries(baseurl,i['category_id']))))

	OR

	for i in s.getChildCategories(s.getCategories(baseurl,category)):
		s.setJson(s.getList(s.getChildSeries(getSeries(baseurl,i['category_id']))))
"""
